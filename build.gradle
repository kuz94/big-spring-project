buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}

	dependencies {
		classpath 'javax.xml.bind:jaxb-api:2.1'
		classpath 'com.sun.xml.bind:jaxb-impl:2.2.11'
		classpath 'com.sun.xml.bind:jaxb-core:2.2.11'
		classpath 'org.jooq:jooq-codegen:3.10.4'
		classpath 'mysql:mysql-connector-java:6.0.6'
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.3'
	}
}

plugins {
	id 'org.springframework.boot' version '1.5.9.RELEASE'
	id 'java'
}

repositories {
	mavenLocal()
	mavenCentral()
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-jdbc")
	compile("org.jooq:jooq:3.10.4")
	compile("org.jooq:jooq-meta:3.10.4")
	compile("org.jooq:jooq-codegen:3.10.4")
	compile("org.slf4j:slf4j-simple:1.7.25")
	compile("ch.qos.logback:logback-classic:1.2.3")
	compile("ch.qos.logback:logback-core:1.2.3")
	runtime("mysql:mysql-connector-java:6.0.6")
	testCompile("org.springframework.boot:spring-boot-starter-test")
	testCompile("org.mockito:mockito-core:2.15.0")
	testCompile("org.junit.jupiter:junit-jupiter-api:5.0.3")
	testRuntime("org.junit.jupiter:junit-jupiter-engine:5.0.3")
}

def writer = new StringWriter()
def xml = new groovy.xml.MarkupBuilder(writer)
		.configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.10.0.xsd') {
	jdbc() {
		driver('com.mysql.jdbc.Driver')
		url('jdbc:mysql://localhost:3306/notepad?serverTimezone=UTC')
		user('root')
		password('root')
	}
	generator() {
		database() {
		}
		generate([:]) {
			pojos true
			daos true
		}
		target() {
			packageName('ru.kuzmin.spring.entities.jooq')
			directory('src/main/java')
		}
	}
}

org.jooq.util.GenerationTool.generate(
		javax.xml.bind.JAXB.unmarshal(new StringReader(writer.toString()), org.jooq.util.jaxb.Configuration.class))

